q) Write a program in C to sort a set of numbers (integers) using merge sort (non-recursive). 

#include <stdio.h>
#define SIZE 5

void printArray(int arr[], int size) {
    printf("Array: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

void merge(int arr[], int left, int mid, int right) {
    int i = left, j = mid + 1, k = 0;
    int temp[SIZE];

    while (i <= mid && j <= right) {
        if (arr[i] < arr[j])
            temp[k++] = arr[i++];
        else
            temp[k++] = arr[j++];
    }

    while (i <= mid)
        temp[k++] = arr[i++];
    while (j <= right)
        temp[k++] = arr[j++];

    for (i = left, k = 0; i <= right; i++, k++)
        arr[i] = temp[k];
}

void mergeSortIterative(int arr[], int n) {
    int curr_size;  // Current size of subarrays to merge
    int left_start; // Starting index of left subarray

    // Merge subarrays in bottom up manner
    for (curr_size = 1; curr_size <= n - 1; curr_size *= 2) {
        for (left_start = 0; left_start < n - 1; left_start += 2 * curr_size) {
            int mid = left_start + curr_size - 1;
            int right_end = (left_start + 2 * curr_size - 1 < n - 1)
                            ? (left_start + 2 * curr_size - 1)
                            : (n - 1);

            if (mid < right_end)
                merge(arr, left_start, mid, right_end);
        }
    }
}

int main() {
    int arr[SIZE], i;
    printf("Enter %d elements: ", SIZE);
    for (i = 0; i < SIZE; i++) {
        scanf("%d", &arr[i]);
    }

    printf("\nBefore Sorting:\n");
    printArray(arr, SIZE);

    mergeSortIterative(arr, SIZE);

    printf("\nAfter Sorting:\n");
    printArray(arr, SIZE);

    return 0;
}
 
